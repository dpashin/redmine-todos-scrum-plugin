<%
raise unless @todo.todoable

#render a newly created todo, and also recreate the sorter helper for the parents container
#if you dont use page.sortable to recreate, the sorting doesnt work for new elements

parent_ul_id = TodosController::UL_ID + @todo.parent_or_root_id
parent_li_id = TodosController::TODO_LI_ID + @todo.parent_id.to_s
%>

var parent_ul_obj = jQuery('#<%= parent_ul_id %>');
if (parent_ul_obj.length == 0) {
	jQuery('#<%= parent_li_id %>')
		.find('.todo-content .text')
			.removeClass('todo-has-children-false')
			.addClass('todo-has-children-true')
			.end()
		.append('<ul id="<%= parent_ul_id %>" class="todos children depth<%= @todo.ancestors.size %>"></ul>')
	parent_ul_obj = jQuery('#<%= parent_ul_id %>');
}
parent_ul_obj.append('<%= escape_javascript(@element_html.html_safe) %>');

<%

#recreate the root sortable element
#root_ul_id = TodosController::UL_ID + @todo.root.parent_or_root_id
#page.sortable(root_ul_id,
#                {
#                  :url => polymorphic_url([@todo.todoable, :todos], :action =>:sort),
#				  :method => :post,
#                  :handle => "todo-content",
#				  :tree => true
#                })
%>
